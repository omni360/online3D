
ï»¿function init(){this.glScene=undefined;this.glRenderer=undefined;this.glCamera=undefined;this.sceneTracker=undefined;this.modelLoader=undefined;this.textMesh=undefined;var _this=this;this.drawLine=function(scene,start,end){var geometry=new THREE.Geometry();geometry.vertices.push(start);geometry.vertices.push(end);var material=new THREE.LineBasicMaterial({color:0x0000ff,});var line=new THREE.Line(geometry,material);scene.add(line);}
init.prototype.takeScreenshot=function(showInWindow){var image=THREEx.Screenshot.toDataURL(_this.glRenderer);if(showInWindow===true){jQuery('<div/>',{id:'screenshot',class:'modal hide fade gridbody'}).appendTo($("#body"));var screenshot=$("#screenshot");screenshot.html("<img src='"+image+"'></img>");screenshot.modal();screenshot.on('hidden',function(){screenshot.remove();})}
return image;}
init.prototype.render=function(){_this.glRenderer.render(_this.glScene,_this.glCamera);}
init.prototype.renderOnScreen=function(){if(_this.sceneTracker&&_this.sceneTracker.object){_this.sceneTracker.update();}
requestAnimationFrame(_this.renderOnScreen);_this.render();}
init.prototype.hideShowModel=function(modelName){this.unlightModels();var breakExecution=false;TOOLS.forEachMesh(function(mesh){if(mesh.name===modelName){if(mesh.visible===undefined)
mesh.visible=false;else
mesh.visible=!mesh.visible;mesh.children[0].visible=mesh.visible;mesh.children[1].visible=mesh.visible;result=mesh.visible;breakExecution=true;}},function(mesh){if(breakExecution)
return false;return TOOLS.isComposedMesh(mesh);});return result;}
init.prototype.higlightModel=function(modelName){TOOLS.forEachMesh(function(mesh){var mat=mesh.children[0].material;if(mesh.name!==modelName){mat.opacity=0.6;}
else{mat.opacity=1.0;}
mat.needsUpdate=true;});}
init.prototype.unlightModels=function(modelName){TOOLS.forEachMesh(function(mesh){var mat=mesh.children[0].material;mat.opacity=1.0;mat.needsUpdate=true;});}
this.initGL=function(container){var HEIGHT=$(window).height();var WIDTH=$("#3DArea").width();var VIEW_ANGLE=50,ASPECT=WIDTH/HEIGHT,NEAR=0.1,FAR=1000;this.glRenderer=new THREE.WebGLRenderer({antialias:true,preserveDrawingBuffer:true});this.glCamera=new THREE.PerspectiveCamera(VIEW_ANGLE,ASPECT,NEAR,FAR);this.glCamera.updateProjectionMatrix();this.glScene=new THREE.Scene();this.glScene.add(this.glCamera);TOOLS.attach(this.glScene,this.glCamera);this.glRenderer.setSize(WIDTH,HEIGHT);this.glRenderer.domElement.id="canvas";container.append(this.glRenderer.domElement);$("#3DArea #canvas").css("position","absolute");$("#3DArea #canvas").css("z-index","2");$("#3DArea #canvas").css("top","45px");$(window).resize(function(){_this.glCamera.aspect=window.innerWidth/window.innerHeight;_this.glCamera.updateProjectionMatrix();_this.glRenderer.setSize(window.innerWidth,window.innerHeight);});$("#3DArea").click(function(e){if(e.button===0&&e.ctrlKey)
{var pointClicked=TOOLS.getVertexFromMouseCoord(e);if(pointClicked!==undefined){_this.sceneTracker.center=pointClicked;_this.spotlight.position=_this.glCamera.position;_this.spotlight.target.position=pointClicked;}}});}};init.prototype.extensionIsOk=function(file){return true;}
init.prototype.setupSceneTracking=function(){this.sceneTracker=new THREE.OrbitControls(this.glCamera,$("#3DArea")[0]);this.sceneTracker.addEventListener('change',this.render);}
init.prototype.loadMeshesInformation=function(){var _count=this.glScene.__objects.length;var infoViewModels=new Array();var imIndex=0;var _this=this;TOOLS.forEachMesh(function(mesh){function modelInfo(){var self=this;self.visible=ko.observable(true);if(mesh.name.length>25)
self.alias=mesh.name.substring(0,23)+"...";else{self.alias=mesh.name;}
self.fileName=mesh.name;self.fileSize="File size: "+mesh.filesize+" kb";self.faceCount="Faces: "+mesh.facecount;self.vertexCount="Vertices: "+mesh.verticescount;self.color=mesh.color;self.click=function(data,event){self.visible(_this.hideShowModel.apply(_this,[data.fileName]));event.preventDefault();};self.wireframe=function(data,event){_this.wireframeView(data.fileName);event.preventDefault();}
self.solid=function(data,event){_this.solidView(data.fileName);event.preventDefault();}
self.collapse_expand=function(data,event){event.preventDefault();}
self.href="#"+imIndex;var curindex=imIndex;self.setTransparencyVal=function(element,transparency){element.css({"width":transparency+"%"});};self.getModelByName=function(modelName){var count=_this.glScene.__objects.length;for(var i=0;i<count;i++){var mesh=_this.glScene.__objects[i];if(mesh!==undefined&&mesh.name===modelName)
return mesh;}};self.mouseWheel=function(event){var mesh=self.getModelByName(self.fileName);if(mesh!==undefined){var mat=mesh.children[0].material;var opacity=mat.opacity;var delta=event.wheelDelta;if(delta===undefined)
delta=event.detail;if(delta<0)
opacity-=0.03;else
opacity+=0.03;if(opacity<0)
opaciy=0;if(opacity>1)
opacity=1;mat.opacity=opacity;self.updateTransparency();event.preventDefault();}};self.updateTransparency=function(){var mesh=self.getModelByName(self.fileName);if(mesh!==undefined){var mat=mesh.children[0].material;var percent=mat.opacity*100;var span=$("#transparencyprogress span");self.setTransparencyVal(span,percent);}};self.getCorrectWheelEventName=function(){if(document.onmousewheel!==undefined)
return"mousewheel";else
return"DOMMouseScroll";}
self.isVisible=function(){return self.visible();};};infoViewModels.push(new modelInfo());imIndex++;});var infos=new(function(infos){this.modelsInformation=infos;})(infoViewModels);var infolist=$("#infoList")[0];ko.applyBindings(infos,infolist);}
init.prototype.createProgress=function(id,parent){var inner=$('<div />').appendTo(parent);inner.attr('id',id);inner.addClass(" progress progress-striped active");inner.css({"margin":"-6px 4px 2px -20px","height":"5px","width":"40px","left":"50%","padding":"3px","position":"relative"});var span=$('<div />').appendTo('#'+id);span.attr('id','progressspan');span.attr('class','bar');span.css({"width":"100%","top":"-0.7em"});}
init.prototype.updateProgressDiv=function(name,percent,text){var div=$("#flprogress");var spanprogress=undefined,spantext=undefined;if(div.length===0){$("#body").append("<div id='flprogress'>"+" "+"</div>");div=$("#flprogress");this.createProgress('flprogress_span',div);$("#flprogress_span").css({"width":"6px 0px 0px 6px","height":"40%","width":"90%","left":"10%","top":"10px","padding":"2px"});spanprogress=$("#flprogress_span #progressspan");spanprogress.css({"width":"1%","top":"0.0em"});div.append("<span id='modelname' style='position:relative; top: 10px; left: 10px;font-weight: bold;font-size: 0.85em; color:whitesmoke'></span>");spantext=$("#flprogress #modelname");div.fadeIn(400);}
if(spanprogress===undefined)
spanprogress=$("#flprogress_span #progressspan");if(spantext===undefined)
spantext=$("#flprogress #modelname");if(percent<1)
percent=1;spanprogress.css({"width":percent+"%"});if(percent<100){spantext.text(text);}
else{spantext.text("Completed!");}}
init.prototype.showDownloadProgress=function(name,percent){this.updateProgressDiv(name,percent,"Downloading "+name+" ...");}
init.prototype.showUploadProgress=function(name,percent){this.updateProgressDiv(name,percent,"Uploading "+name+" ...");}
init.prototype.getPacketSize=function(vertexCount){if(vertexCount>=500000)
return vertexCount/81;else if(vertexCount>=300000)
return vertexCount/27;else if(vertexCount>=100000)
return vertexCount/81;else if(vertexCount>=40000)
return vertexCount/243;else if(vertexCount>=10000)
return vertexCount/729;else if(vertexCount>=5000)
return vertexCount/27;return 3;}
init.prototype.sendContentToServer=function(){var unique=undefined;var meshIndex=0;var _this=this;(function uploadAnotherModel(){var childrenCount=_this.glScene.__objects.length;if(meshIndex>=childrenCount){$("#flprogress").remove();toastr.success('Upload of all models done.','Success !');return;}
var mesh=_this.glScene.__objects[meshIndex];if(!TOOLS.isComposedMesh(mesh)){meshIndex++;uploadAnotherModel();return;}
var geometryMesh=mesh.children[0];var verticesCount=geometryMesh.geometry.vertices.length;var step=parseInt(_this.getPacketSize(verticesCount));var index=0;if(index===0){_this.showUploadProgress(mesh.name,0);}
var firstLoad=false;function currentModelSequence(){var verticesSplit=new Array();var colorsSplit=new Array();while(index<verticesCount){var gv=geometryMesh.geometry.vertices[index];var vertex="x:"+parseFloat(Math.round(gv.x*100)/100).toFixed(2)+" "+"y:"+parseFloat(Math.round(gv.y*100)/100).toFixed(2)+" "+"z:"+parseFloat(Math.round(gv.z*100)/100).toFixed(2);if(gv.vertexColor!==undefined)
colorsSplit.push(index+":"+gv.vertexColor);verticesSplit.push(vertex);index++;if(index==1)
break;if(verticesSplit.length%step===0)
break;}
var modelInfo={ModelName:mesh.name,Size:mesh.filesize,Format:"Stl",ID:unique,Vertices:verticesSplit,VertexCount:verticesCount,Color:mesh.color,FaceColors:colorsSplit};if(index===1&&!firstLoad){modelInfo.ModelImage=_this.takeScreenshot();firstLoad=true;}
$.ajax({url:"SaveModel/",type:"POST",contentType:"application/json",processData:false,cache:false,data:JSON.stringify(modelInfo),dataType:'json',success:function(data){if(data===false){toastr.error('Error on save.','Error !');$("#flprogress").remove();return;}
unique=data;if(index<verticesCount){currentModelSequence();_this.showUploadProgress(mesh.name,100/(verticesCount/index));}
else{meshIndex++;_this.showUploadProgress(mesh.name,100);uploadAnotherModel();}},error:function(data){toastr.error('Error on save.','Error !');$("#flprogress").remove();},statusCode:{401:function(data){meshIndex=-1;$("#flprogress").remove();toastr.error('You need to login first.','Error !');userAccess.requestUserAuth();}}});};currentModelSequence();})();}
init.prototype.LoadFromServer=function(unique){var _this=this;var mindex=0;var packet=0;var models=new Array();var tempModel={};(function load(){$.ajax({url:'../GetModels/',data:{id:unique,modelIndex:mindex,packetIndex:packet},success:function(data){if(tempModel.ModelName===undefined)
tempModel.ModelName=data.ModelName;if(tempModel.Size===undefined)
tempModel.Size=data.Size;if(tempModel.Format===undefined)
tempModel.Format=data.Format;if(tempModel.Vertices===undefined)
tempModel.Vertices=[];if(tempModel.VertexCount===undefined)
tempModel.VertexCount=data.VertexCount;if(tempModel.Color===undefined)
tempModel.Color=data.Color;if(tempModel.FaceColors===undefined)
tempModel.FaceColors=data.FaceColors;if(data==="modeldone"){models.push(tempModel);mindex++;packet=0;tempModel={};_this.showDownloadProgress(tempModel.ModelName,100);load();}
else if(data!=="alldone"){if(packet==0){_this.showDownloadProgress(tempModel.ModelName,0);}
else{_this.showDownloadProgress(tempModel.ModelName,100/(tempModel.VertexCount/tempModel.Vertices.length));}
var vertices=[];for(var v=0;v<data.Vertices.length;v++){var splitted=data.Vertices[v].split(/:| /);vertices.push(new THREE.Vector3(parseFloat(splitted[1]),parseFloat(splitted[3]),parseFloat(splitted[5])));}
tempModel.Vertices=tempModel.Vertices.concat(vertices);packet++;load();}
else{$("#flprogress").remove();toastr.success('Got all models from the server. Now begin processing','Success !');_this.loadMeshesFromServer(models);models=[];}}});})();}
init.prototype.finalizeLoading=function(){this.loadMeshesInformation.apply(this);}
init.prototype.hidePanels=function(all){$("#3DArea").css("visibility","hidden");$("#basicPanel").css("visibility","hidden");$("#expandfileInfo").css("visibility","hidden");}
init.prototype.showPanels=function(all){$("#3DArea").css("visibility","visible");$("#basicPanel").css("visibility","visible");$("#expandfileInfo").css("visibility","visible");}
init.prototype.lookFrom=function(vector,offset,axis,bounds){if(bounds===undefined)
bounds=TOOLS.getSceneBoundingBox();var center=new THREE.Vector3();center.x=(bounds.min.x+bounds.max.x)/2;center.y=(bounds.min.y+bounds.max.y)/2;center.z=(bounds.min.z+bounds.max.z)/2;this.sceneTracker.center=center;var diag=new THREE.Vector3();diag=diag.subVectors(bounds.max,bounds.min);var radius=diag.length()/2;offset=radius/Math.tan(Math.PI/180.0*this.glCamera.fov*0.5);var dir=vector;dir.multiplyScalar(offset);var newPos=new THREE.Vector3();newPos.add(center,dir);if(axis==="z"||axis===undefined){this.glCamera.position.set(center.x,center.y,newPos.z);}
else if(axis==="x")
this.glCamera.position.set(newPos.x,center.y,center.z);else if(axis==="y")
this.glCamera.position.set(center.x,newPos.y,center.z);return center;}
init.prototype.fitCamera=function(scene,camera,tracker,bounds){var vector=camera.matrix.getColumnZ()
var center=this.lookFrom(vector);if(this.spotlight===undefined){this.spotlight=new THREE.SpotLight(0xFFFFFF,0.9);scene.add(this.spotlight);}
this.spotlight.position=camera.position;this.spotlight.target.position=center;}
init.prototype.initScene=function(_this){if(!_this.glScene)
_this.initGL($("#3DArea"));if(!_this.glScene){toastr.error('Can not initialize GL engine','Error');return;}
_this.setupSceneTracking();_this.modelLoader=new ModelLoader(this.glScene,this.glCamera,this.glRenderer,this.sceneTracker);_this.hidePanels();}
init.prototype.LoadFiles=function(files){if(files===undefined)
return;var _this=this;_this.initScene(_this);var index=files.length-1;var loadAsync=function(){if(index<0){_this.fitCamera.apply(_this,[_this.glScene,_this.glCamera,_this.sceneTracker]);_this.renderOnScreen();_this.finalizeLoading.apply(_this);_this.showPanels();toastr.success('Done !');return;}
var store=files[index];_this.modelLoader.loadModel(_this.glScene,store.fileData,store.fileName,store.fileSize,loadAsync);index--;};loadAsync();}
init.prototype.loadMeshesFromServer=function(meshes){if(meshes===undefined)
return;var _this=this;_this.initScene(_this);var index=meshes.length-1;var loadAsync=function(){if(index<0){_this.fitCamera.apply(_this,[_this.glScene,_this.glCamera,_this.sceneTracker]);_this.renderOnScreen();_this.finalizeLoading.apply(_this);_this.showPanels();toastr.success('Done !');return;}
var mesh=meshes[index];_this.modelLoader.loadMeshModel(mesh,loadAsync);index--;};loadAsync();}
init.prototype.LoadFileData=function(file){window.indexedFiles.getAllFiles(this,this.LoadFiles);}
init.prototype.pointCloudView=function(){}
init.prototype.solidView=function(meshname){TOOLS.forEachMesh(function(mesh){if(!mesh.visible)
return;if(meshname!==undefined&&meshname!==mesh.name)
return;mesh.children[0].visible=true;mesh.children[1].visible=false;});}
init.prototype.wireframeView=function(meshname){TOOLS.forEachMesh(function(mesh){if(!mesh.visible)
return;if(!mesh.visible)
return;if(meshname!==undefined&&meshname!=mesh.name)
return;mesh.children[0].visible=false;mesh.children[1].visible=true;});}
init.prototype.meshView=function(){TOOLS.forEachMesh(function(mesh){if(!mesh.visible)
return;mesh.children[0].visible=true;mesh.children[1].visible=true;});}
init.prototype.showEdges=function(){var mesh=this.glScene.__los[0];var geometry=mesh.geometry;}
init.prototype.topView=function(){var vector=this.glCamera.matrix.getColumnZ();var offset=1;vector.z=1;if(vector.z<0){vector.z*=-1;}
this.lookFrom(vector,offset,"z");}
init.prototype.bottomView=function(){var vector=this.glCamera.matrix.getColumnZ();var offset=1;vector.z=1;if(vector.z>0){vector.z*=-1;}
this.lookFrom(vector,offset,"z");}
init.prototype.leftView=function(){var vector=this.glCamera.matrix.getColumnX();var offset=1;vector.x=1;if(vector.x<0){vector.x*=-1;}
this.lookFrom(vector,offset,"x");}
init.prototype.rightView=function(){var vector=this.glCamera.matrix.getColumnX();var offset=1;vector.x=1;if(vector.x>0){vector.x*=-1;}
this.lookFrom(vector,offset,"x");}
init.prototype.frontView=function(){var vector=this.glCamera.matrix.getColumnY();var offset=1;vector.y=1;if(vector.y>0){vector.y*=-1;}
this.lookFrom(vector,offset,"y");}
init.prototype.backView=function(){var vector=this.glCamera.matrix.getColumnY();var offset=1;vector.y=1;if(vector.y<0){vector.y*=-1;}
this.lookFrom(vector,offset,"y");}